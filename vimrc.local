execute pathogen#infect()
syntax on
filetype plugin indent on

syntax enable
set background=dark
colorscheme solarized

let mapleader = ","
set hlsearch
map <Leader><space> :nohl<cr>

vmap gh i{% highlight ruby linedivs %}^M{% endhighlight %}^[O
map <f2> :call system("tmux resize-pane -y 10 -t2") <cr>
map <f3> :call system("tmux resize-pane -y 40 -t2") <cr>
map <f4> :call system("tmux resize-pane -Z -t1") <cr>
map <f5> :w<cr>:call system("tmux resize-pane -y 20 -t2 && tmux send -t2 'make && tmux resize-pane -Z -t1' c-j")<cr>
map <f6> :call system("tmux resize-pane -Z -t1") <cr>
map <f7> :call system("tmux resize-pane -y 40 -t2") <cr>
map <f8> :w<cr> :call system("tmux resize-pane -y 10 -t2") <cr>
imap <f8> <esc>:w<cr> :call system("tmux resize-pane -y 10 -t2") <cr>
map <f9> :call system("tmux resize-pane -y 10 -t2") <cr>
imap <f9> :call system("tmux resize-pane -y 10 -t2") <cr>
imap <f10> <esc>:w<cr>:call system("tmux resize-pane -y 10 -t2 && tmux send -t2 'gradle test --info && tmux resize-pane -Z -t1' c-j")<cr>
map <f10> :w<cr>:call system("tmux resize-pane -y 10 -t2 && tmux send -t2 'gradle test --info && tmux resize-pane -Z -t1' c-j")<cr>
map ^S :w<cr>

map <Leader>n :NERDTreeToggle<CR>

set tags^=./.git/tags;

" Spellcheck for markdown files
autocmd BufRead,BufNewFile *.md setlocal spell
autocmd BufRead,BufNewFile *.markdown setlocal spell

" Java completion
autocmd FileType java setlocal omnifunc=javacomplete#Complete
autocmd FileType java JCEnable

set expandtab
